{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Backbone.Application","google":"","body":"# Basic MVC implementation for backbone.js\r\n\r\nThis is simply yet effective implementation of the MVC pattern. 2 new classes has been added to the Backbone namespace:\r\n* Backbone.Application\r\n* Backbone.Controller\r\n\r\n# Usage\r\n## Setting up namespace\r\nBefore you start, it might be good idea to define application namespace, where all parts will be defined. Let'd do the quick setup for our FormBuilder application.\r\n```Javascript\r\nvar FormBuilder = {\r\n\tControllers: {},\r\n\tModels: {},\r\n\tViews: {},\r\n\tCollections: {}\r\n}\r\n```\r\n## Defining new application\r\nEach application should start from defining your application constructor. Setup `nameSpace` property to define the global variable for the entire application and `name` property to define a variable for application instance within global namespace.\r\n```Javascript\r\nFormBuilder.Application = Backbone.Application.extend({\r\n\tname: 'app',\r\n\tnameSpace: 'FormBuilder',\r\n\t\r\n\tcontrollers: [\r\n\t\t'FormBuilder.Controllers.FormManager',\r\n\t\t'FormBuilder.Controllers.Administration',\r\n\t\t'FormBuilder.Controllers.RunTime'\r\n\t]\r\n});\r\n```\r\nIn result, application will be available in global FormBuilder.app varible.\r\n\r\n## Defining a controller\r\nControllers are used to bind all application parts together. All they really do is listen for events (usually from views and other controllers) and take some action.\r\n```Javascript\r\nFormBuilder.Controllers.UserManager = Backbone.Controller.extend({\r\n\tmodels: [\r\n\t\t'FormBuilder.Models.Form',\r\n\t\t...\r\n\t],\r\n\tcollections: [\r\n\t\t'FormBuilder.Collections.Forms',\r\n\t\t...\r\n\t],\r\n\tviews: [\r\n\t\t'FormBuilder.Views.FormManager',\r\n\t\t...\r\n\t]\r\n});\r\n```\r\n\r\n`Controller.initialize` function is a great place to setup controller event listeners. Simply call `Controller.addListeners` function and pass the list of views in order to handle view events. In our example, let's listen for `'toolbar.action'` event from `FormManager` view:\r\n```Javascript\r\nFormBuilder.Controllers.UserManager = Backbone.Controller.extend({\r\n\t...\t\t\r\n\tinitialize: function() {\r\n\t\tthis.addListeners({\r\n\t\t\t'FormManager': {\r\n\t\t\t\t'toolbar.action': this.toolbarAction\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\t\r\n\ttoolbarAction: function(action) {\r\n\t\t// code here\r\n\t}\r\n});\r\n```\r\n\r\nEach controller has `onLauch` callback which is great place to set up controller basics. Let's create `Form` model, then `FormManager` view and render it.\r\n```Javascript\r\nFormBuilder.Controllers.UserManager = Backbone.Controller.extend({\r\n\t...\t\t\r\n\tonLaunch: function() {\r\n\t\tvar formModel = this.getModel('Form');\r\n\t\tvar formView = this.createView('FormManager', {\r\n\t\t\tmodel: formModel\r\n\t\t});\r\n\t\t\r\n\t\tformView.render();\r\n\t}\r\n\t...\r\n});\r\n```\r\n\r\n## Defining a view\r\nIt's pretty much the same as original [Backbone.View](http://backbonejs.org/#View), but there are small difference. In order to enable controller level events, use `View.fireEvent` method instead of default `View.trigger`. Let's see how we can fire up `'toolbar.action'` events from `FormManager` view in order to notify `UserManager` controller about that actions.\r\n```Javascript\r\nFormBuilder.Views.FormManager = Backbone.View.extend({\r\n\tevents: {\r\n\t\t'click .toolbar button': 'onToolbarButtonClick'\r\n\t},\r\n\t...\t\t\r\n\tonToolbarButtonClick: function(event) {\r\n\t\tvar button = $(event.currentTarget),\r\n\t\t\taction = button.data('action');\r\n\t\t\t\r\n\t\tthis.fireEvent('toolbar.action', [action]);\r\n\t}\r\n\t...\r\n});\r\n```\r\nThat's it! All controllers, that are listen for the `FormManager` will know about that event.\r\n\r\n## Runnin an application\r\nWhen all parts are defined, it's time to launch our application. \r\n```Javascript\r\nnew FormBuilder.Application();\r\n```\r\nYay! New application instance is created and ready to rock ;)","tagline":"Simple implmentation of the MVC pattern using Backbone.js"}